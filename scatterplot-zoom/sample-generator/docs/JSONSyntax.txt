DaVi JSON SYNTAX

For feeding to Java, backslash must be used to escape forward slash and quote (\/ and \”).
In notation below, angle brackets (<>) demarcate meta material and parentheses demarcate optional items.

Input data column names are cleaned of illegal special characters and prepended with underscore, e.g., Age -> _Age
This notation indicates that they are input data variables. 
The TransformationProcessor can create new variables with any legal C/C++ variable name.

There are four Processors. They are invoked in the following order, depending on which ones are specified in JSON.
JSON can include a TransformationProcessor set plus one of the others, or only one of the others.
	TransformationProcessor
	DataProcessor
	GraphicsProcessor
	AnalyticProcessor

TransformationProcessor:
	INPUT:"{"uri”:”<uri/url for data>”,(”columnList”:[<list of integers>]),"transformations":{"script”:[“<statement1>”,”<statement2>,...], ("parameters":{<set of parameters}) }}”
	OUTPUT: new data table, which can be analyzed with other processors

  The transformation language is a superset of C without semicolons (see stats.doc.index.html)
  Each statement in a program is encapsulated in each element of the script list. There is no limit on the number of statements.

DataProcessor:
	INPUT: {"uri”:”<uri for data>”,"data":{"parameters”:({“startRow”:<integer>,”endRow”:<integer>,”startColumn”:<integer>,”endColumn”:<integer>}),”subtype":"table"}}
	OUTPUT: {"dataTable”:[[<list of values in first row>],[<list of values in second row],...]],”parameters”:{“startRow”:<integer>,...},”variableNames”:[<list of variable names>}

GraphicsProcessor:
	INPUT: {"uri”:”<uri for data>”,(”columnList”:[<list of integers>]),"graphics":{"subtype”:”<graph type>”, ("parameters”:{<set of parameters>}) }
	OUTPUT: {“<graph type>”:{<data for constructing graph>}}
 Subtypes are:
  histograms and bar charts:
	INPUT: {"uri”:”<uri for data>”,(”columnList”:[<list of integers>]),”graphics":{"subtype":"histobars", ("parameters":{ ("numberOfBars":<integer>) }) }}
	OUTPUT: {"histobarsList”:{"variable":“<variable name>":[<list of [bin,count] tuples>], “<variable name>":[<list of [bin,count] tuples>],...}}
  scatterplots:
	INPUT: {"uri”:”<uri for data>”,(”columnList”:[<list of integers>]),"graphics":{"subtype":"scatterplots", ("parameters":{"tupleList":[<list of tuples, one tuple per scatterplot>]}) }}
	OUTPUT: {"scatterplotList":{“<tuple of xy variable names>":["xCoordinatesList":<list of x coordinates>], ["xyCoordinatesList":<list of y coordinates>],["zCoordinatesList":<list of z coordinates>],"countsList":<list of counts>},...}}
  dotplots:
	INPUT: {"uri”:”<uri for data>”,(”columnList”:[<list of integers>]),"graphics":{"subtype":"dotplots"}, ("parameters":{<set of parameters}) }
	OUTPUT: {"histobarsList”:{"variable":“<variable name>",[[<x coordinate value>,[<list of cases>], “<variable name>":[<x coordinate value>,[<list of cases>],...]}}}

  parallel coordinate plots:
	INPUT: {"uri”:”<uri for data>”,(”columnList”:[<list of integers>]),"graphics":{"subtype":"parallelcoordinates"}, ("parameters":{<set of parameters}) }
	OUTPUT: {"parallelcoordinatesList":{"variable":“<variable name>":<variable name>,“profiles":[<list of tuples>],"variableNames":[<list of variable names>]}}

AnalyticsProcessor:
	INPUT: {"uri”:”<uri for data>”,(”columnList”:[<list of integers>]),"analytics":{("variables":"<list of variables") , ("parameters":{<set of parameters>}) ,"subtype":"<analytic subtype>"}}
	OUTPUT: {"<type of analytic>":{"<subtype>":{"<variable name>":{"<identifier>":[<results>],"<graphic type>":{<data for graphic>},...}}}}

 Subtypes are:
  anomalies:
	INPUT: {"uri”:”<uri for data>”,(”columnList”:[<list of integers>]),"analytics":{"subtype":"anomalies", ("parameters":{"alpha":<number>})}}
	OUTPUT: 
	"anomalies": {
		"distributions": {
			"spiked": {"columnIndices":[<list of columnList>],"dotplots":[{"<variable name>": [<list of values>],{"<variable name>": [<list of values>]},...]}
			"skewed": {"columnIndices":[<list of columnList>],"dotplots":[{"<variable name>": [<list of values>],{"<variable name>": [<list of values>]},...]}
			"multimodal": {"columnIndices":[<list of columnList>],"dotplots":[{"<variable name>": [<list of values>],{"<variable name>": [<list of values>]},...]}
		"outliers": {
			"multivariateOutliers": {
				"parallelCoordinates": {"profiles": [<list of parallel coordinates profiles>],
					"variableNames": [<list of variable names used in parallel coordinates>]
				},
				"multivariateOutlierIndices": [<list of case indices of outliers>]
			},
			"univariateOutliers": {
				"<variable name>": {
					"univariateOutlierIndices": [<list of case indices of outliers>],
					"dotplots": [{"<variable name>": [{"<variable name>": [<list of values>],{"<variable name>": [<list of values>]},...]}
			}
			"timeSeriesOutliers": {
				"<variable name>": {
					"timeSeriesOutlierIndices": [<list of indices>],
					"scatterplots":{“<tuple of xy variable names>":[<list of xy tuple values>], “<tuple of xy variable names>:[<list of xy tuple values>],...}}

			}
			"idiosyncraticOutliers": {
				"<variable name>": {
					"idiosyncraticOutlierIndices": [<list of case indices of outliers>],
					"scatterplots":{“<tuple of xy variable names>":[<list of xy tuple values>], “<tuple of xy variable names>:[<list of xy tuple values>],...}}
			}
			"duplicateRows": {
				"parallelCoordinates": {"profiles": [<list of parallel coordinates profiles>],
					"variableNames": [<list of variable names used in parallel coordinates>]
				},
				"duplicateIndices": [<list of lists of case indices of duplicate rows>]
			}}

EXAMPLES:
"{\"uri\":\"..\/data\/baseball.csv\",\"columnList\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"transformations\":{\"script\":[\"salary = log(_Salary)\"]}}"

"{\"uri\":\"..\/data\/baseball.csv\",\"columnList\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"transformations\":{\"script\":[\"salary = log(_Salary)\",\"if (_Salary > 100000) delete\"]}}"

"{\"uri\":\"..\/data\/baseball.csv\",\"columnList\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"transformations\":{\"script\":[\"salary = log(_Salary)\"]},\"data\":{\"parameters\":{\"startColumn\":2,\"endColumn\":4}}}"

"{\"uri\":\"..\/data\/baseball.csv\",\"columnList\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"data\":{\"parameters\":{\"startColumn\":2,\"endColumn\":4}}}"

"{\"uri\":\"../data/ourworld.csv\", \"columnList\":[23,24],\"graphics\":{\"subtype\":\"histobars\", \"parameters\":{\"numberOfBars\":0}}}"

"{\"uri\":\"../data/ourworld.csv\", \"columnList\":[10,12,15],\"graphics\":{\"subtype\":\"scatterplots\", \"parameters\":{\"tuples\":[[0,1],[1,2]],\"color\":0}}}"

"{\"uri\":\"../data/crime.csv\", \"columnList\":[2],\"graphics\":{\"subtype\":\"dotplots\"}}"

"{\"uri\":\"../data/ourworld.csv\", \"columnList\":[23,24],\"graphics\":{\"subtype\":\"parallelcoordinates\", }}"

"{\"uri\":\"..\/data\/baseball.csv\",\"columnList\":[4,5,6,7,8],\"analytics\":{\"parameters\":{\"alpha\":0.05},\"subtype\":\"anomalies\"}}"







